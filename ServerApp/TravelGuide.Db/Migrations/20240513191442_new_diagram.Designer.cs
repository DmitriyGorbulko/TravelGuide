// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TravelGuide.Db;

#nullable disable

namespace TravelGuide.Db.Migrations
{
    [DbContext(typeof(TravelGuideDbContext))]
    [Migration("20240513191442_new_diagram")]
    partial class new_diagram
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TravelGuide.Db.Entity.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PointId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PointId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("TravelGuide.Db.Entity.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("X")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Y")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("TravelGuide.Db.Entity.PointOfWay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PointId")
                        .HasColumnType("integer");

                    b.Property<int>("WayId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PointId");

                    b.HasIndex("WayId");

                    b.ToTable("PointOfWays");
                });

            modelBuilder.Entity("TravelGuide.Db.Entity.User", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("TravelGuide.Db.Entity.Way", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ways");
                });

            modelBuilder.Entity("TravelGuide.Db.Entity.Place", b =>
                {
                    b.HasOne("TravelGuide.Db.Entity.Point", "Point")
                        .WithMany("Places")
                        .HasForeignKey("PointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Point");
                });

            modelBuilder.Entity("TravelGuide.Db.Entity.PointOfWay", b =>
                {
                    b.HasOne("TravelGuide.Db.Entity.Point", "Point")
                        .WithMany("PointOfWays")
                        .HasForeignKey("PointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelGuide.Db.Entity.Way", "Way")
                        .WithMany("PointOfWays")
                        .HasForeignKey("WayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Point");

                    b.Navigation("Way");
                });

            modelBuilder.Entity("TravelGuide.Db.Entity.Point", b =>
                {
                    b.Navigation("Places");

                    b.Navigation("PointOfWays");
                });

            modelBuilder.Entity("TravelGuide.Db.Entity.Way", b =>
                {
                    b.Navigation("PointOfWays");
                });
#pragma warning restore 612, 618
        }
    }
}
